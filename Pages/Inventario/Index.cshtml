@page
@model gestor_eventos.Pages.Inventario.IndexModel
@{
    ViewData["Title"] = "Gestión de Inventario";
}

@Html.AntiForgeryToken()

<!-- Contenedor para alertas dinámicas -->
<div id="alertContainer" class="mb-4"></div>

<!-- Header con estadísticas -->
<div class="row g-3 mb-4">
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-primary bg-opacity-10">
                        <i class="bi bi-box-seam text-primary"></i>
                    </div>
                    <span class="badge bg-primary bg-opacity-10 text-primary px-2 py-1">Inventario</span>
                </div>
                <h5 class="fw-bold mb-1">@Model.TotalItems ítems</h5>
                <p class="text-muted mb-0 small">registrados en total</p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-warning bg-opacity-10">
                        <i class="bi bi-exclamation-triangle text-warning"></i>
                    </div>
                    <span class="badge bg-warning bg-opacity-10 text-warning px-2 py-1">Stock Bajo</span>
                </div>
                <h5 class="fw-bold mb-1">@Model.InventoryItems.Count(i => i.Stock < 10 && i.Stock > 0) ítems</h5>
                <p class="text-muted mb-0 small">con stock bajo</p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-success bg-opacity-10">
                        <i class="bi bi-boxes text-success"></i>
                    </div>
                    <span class="badge bg-success bg-opacity-10 text-success px-2 py-1">Stock Total</span>
                </div>
                <h5 class="fw-bold mb-1">@Model.InventoryItems.Sum(i => i.Stock) unidades</h5>
                <p class="text-muted mb-0 small">en todos los productos</p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-info bg-opacity-10">
                        <i class="bi bi-tag text-info"></i>
                    </div>
                    <span class="badge bg-info bg-opacity-10 text-info px-2 py-1">Categorías</span>
                </div>
                <h5 class="fw-bold mb-1">@Model.InventoryItems.Select(i => i.Categoria).Distinct().Count() tipos</h5>
                <p class="text-muted mb-0 small">de items diferentes</p>
            </div>
        </div>
    </div>
</div>

<!-- Filtros y búsqueda -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body p-3">
        <form method="get" id="filterForm">
            <div class="row g-2 align-items-center">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-light">
                            <i class="bi bi-search"></i>
                        </span>
                        <input type="text" class="form-control border-light bg-light" 
                               placeholder="Buscar por nombre" 
                               asp-for="SearchTerm">
                    </div>
                </div>
                
                <div class="col-md-3">
                    <select class="form-select border-light bg-light" asp-for="CategoryFilter">
                        <option value="">Todas las categorías</option>
                        <option value="Mobiliario">Mobiliario</option>
                        <option value="Decoración">Decoración</option>
                        <option value="Audio y Video">Audio y Video</option>
                        <option value="Vajilla">Vajilla y Cristalería</option>
                        <option value="Mantelería">Mantelería</option>
                        <option value="Iluminación">Iluminación</option>
                    </select>
                </div>
                
                <div class="col-md-1">
                    <button type="button" id="clearFilters" class="btn btn-secondary w-100" title="Limpiar filtros">
                        <i class="bi bi-arrow-counterclockwise"></i>
                    </button>
                </div>
                
                <div class="col-md-2">
                    <button class="btn btn-primary w-100" type="submit" title="Filtrar">
                        <i class="bi bi-funnel-fill me-1"></i> Filtrar
                    </button>
                </div>
                
                <div class="col-md-2 ms-auto">
                    <button class="btn btn-success w-100" type="button" data-bs-toggle="modal" data-bs-target="#newItemModal">
                        <i class="bi bi-plus-circle me-1"></i> Nuevo Ítem
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Tabla de inventario (modificada para usar el nuevo modelo) -->
<div class="card border-0 shadow-sm">
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0" id="inventoryTable">
                <thead class="bg-light text-dark">
                    <tr>
                        <th class="ps-4">Nombre</th>
                        <th>Descripción</th>
                        <th class="text-center">Stock</th>
                        <th class="text-center">Categoría</th>
                        <th class="text-center">Fecha Registro</th>
                        <th class="text-end pe-4">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.InventoryItems != null && Model.InventoryItems.Any())
                    {
                        foreach (var item in Model.InventoryItems)
                        {
                            var rowClass = "";
                            
                            if (item.Stock <= 0)
                            {
                                rowClass = "table-danger bg-opacity-10";
                            }
                            else if (item.Stock < 10) // Asumiendo que 10 es el stock mínimo
                            {
                                rowClass = "table-warning bg-opacity-10";
                            }
                            
                            <tr class="@rowClass">
                                <td class="ps-4">
                                    <span class="fw-medium item-name" 
                                          data-nombre="@item.Nombre"
                                          data-id="@item.Id">@item.Nombre</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Descripcion))
                                    {
                                        <span class="text-muted small" 
                                              data-descripcion="@item.Descripcion">@item.Descripcion</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted small" 
                                              data-descripcion="">Sin descripción</span>
                                    }
                                </td>
                                <td class="text-center">
                                    <span class="fw-medium" 
                                          data-stock="@item.Stock">@item.Stock</span>
                                </td>
                                <td class="text-center">
                                    <span class="badge rounded-pill px-3 py-2 bg-opacity-10 text-dark"
                                          data-categoria="@item.Categoria">
                                        @item.Categoria
                                    </span>
                                </td>
                                <td class="text-center">
                                    <span data-fecha="@item.FechaRegistro.ToString("yyyy-MM-dd")">
                                        @item.FechaRegistro.ToString("dd/MM/yyyy")
                                    </span>
                                </td>
                                <td class="text-end pe-4">
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-secondary edit-item-btn" 
                                                data-bs-toggle="tooltip" 
                                                data-bs-title="Editar ítem" 
                                                data-id="@item.Id">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger delete-item-btn" 
                                                data-bs-toggle="tooltip" 
                                                data-bs-title="Eliminar ítem" 
                                                data-id="@item.Id"
                                                data-name="@item.Nombre">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-primary view-details-btn" 
                                                data-bs-toggle="tooltip" 
                                                data-bs-title="Ver detalles" 
                                                data-id="@item.Id" 
                                                data-name="@item.Nombre">
                                            <i class="bi bi-info-circle"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center py-5">
                                <div class="d-flex flex-column align-items-center py-5">
                                    <i class="bi bi-box-seam text-muted" style="font-size: 3rem;"></i>
                                    <h5 class="mt-3">No se encontraron ítems</h5>
                                    <p class="text-muted mb-4">Prueba ajustando los filtros o agrega un nuevo ítem al inventario</p>
                                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newItemModal">
                                        <i class="bi bi-plus-circle me-2"></i>Nuevo Ítem
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Paginación -->
@if (Model.InventoryItems != null && Model.InventoryItems.Any())
{
    <div class="d-flex justify-content-between align-items-center mt-4">
        <div>
            <span class="text-muted">Mostrando <span class="fw-medium">@Model.InventoryItems.Count</span> de <span class="fw-medium">@Model.TotalItems</span> ítems</span>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination mb-0">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(Model.CurrentPage-1)&searchTerm=@Model.SearchTerm&categoryFilter=@Model.CategoryFilter&statusFilter=@Model.StatusFilter" aria-label="Previous">
                        <span aria-hidden="true">«</span>
                    </a>
                </li>
                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i&searchTerm=@Model.SearchTerm&categoryFilter=@Model.CategoryFilter&statusFilter=@Model.StatusFilter">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(Model.CurrentPage+1)&searchTerm=@Model.SearchTerm&categoryFilter=@Model.CategoryFilter&statusFilter=@Model.StatusFilter" aria-label="Next">
                        <span aria-hidden="true">»</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}

<!-- Modal para Nuevo Ítem -->
<div class="modal fade" id="newItemModal" tabindex="-1" aria-labelledby="newItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="newItemModalLabel">
                    <i class="bi bi-plus-circle me-2"></i>Nuevo Ítem de Inventario
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newItemForm">
                    <div class="row g-3">
                        <div class="col-12">
                            <label for="itemName" class="form-label">Nombre del ítem <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="itemName" required>
                        </div>
                        <div class="col-12">
                            <label for="itemCategory" class="form-label">Categoría <span class="text-danger">*</span></label>
                            <select class="form-select" id="itemCategory" required>
                                <option value="">Seleccionar categoría</option>
                                <option value="Mobiliario">Mobiliario</option>
                                <option value="Decoración">Decoración</option>
                                <option value="Audio y Video">Audio y Video</option>
                                <option value="Vajilla">Vajilla y Cristalería</option>
                                <option value="Mantelería">Mantelería</option>
                                <option value="Iluminación">Iluminación</option>
                                <option value="Otro">Otro</option>
                            </select>
                        </div>
                        <div class="col-12">
                            <label for="itemStock" class="form-label">Stock inicial <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="itemStock" min="0" required>
                        </div>
                        <div class="col-12">
                            <label for="itemDescription" class="form-label">Descripción</label>
                            <textarea class="form-control" id="itemDescription" rows="3"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveNewItem">
                    <i class="bi bi-save me-1"></i>Guardar Ítem
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Editar Ítem -->
<div class="modal fade" id="editItemModal" tabindex="-1" aria-labelledby="editItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="editItemModalLabel">
                    <i class="bi bi-pencil-square me-2"></i>Editar Ítem
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editItemForm">
                    <input type="hidden" id="editItemId">
                    <div class="row g-3">
                        <div class="col-12">
                            <label for="editItemName" class="form-label">Nombre del ítem <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="editItemName" required>
                        </div>
                        <div class="col-12">
                            <label for="editItemCategory" class="form-label">Categoría <span class="text-danger">*</span></label>
                            <select class="form-select" id="editItemCategory" required>
                                <option value="">Seleccionar categoría</option>
                                <option value="Mobiliario">Mobiliario</option>
                                <option value="Decoración">Decoración</option>
                                <option value="Audio y Video">Audio y Video</option>
                                <option value="Vajilla">Vajilla y Cristalería</option>
                                <option value="Mantelería">Mantelería</option>
                                <option value="Iluminación">Iluminación</option>
                                <option value="Otro">Otro</option>
                            </select>
                        </div>
                        <div class="col-12">
                            <label for="editCurrentStock" class="form-label">Stock <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="editCurrentStock" min="0" required>
                        </div>
                        <div class="col-12">
                            <label for="editItemNotes" class="form-label">Descripción</label>
                            <textarea class="form-control" id="editItemNotes" rows="3"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveEditItem">
                    <i class="bi bi-save me-1"></i>Guardar Cambios
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para asignar a servicio/reserva -->
<div class="modal fade" id="assignItemModal" tabindex="-1" aria-labelledby="assignItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="assignItemModalLabel">
                    <i class="bi bi-calendar-plus me-2"></i>Asignar <span id="assignItemName"></span> a servicio
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="assignItemForm">
                    <input type="hidden" id="assignItemId">
                    <div class="mb-3">
                        <label for="assignReservation" class="form-label">Reserva/Evento <span class="text-danger">*</span></label>
                        <select class="form-select" id="assignReservation" required>
                            <option value="">Seleccionar reserva</option>
                            <option value="1">Boda de Carlos Rodríguez - 15/05/2025</option>
                            <option value="2">Cumpleaños de María González - 22/04/2025</option>
                            <option value="3">Conferencia Corporativa Empresa ABC - 05/05/2025</option>
                            <option value="4">Graduación de Juan Pérez - 15/05/2025</option>
                            <option value="5">Bautizo de Ana López - 30/04/2025</option>
                        </select>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="assignQuantity" class="form-label">Cantidad <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="assignQuantity" min="1" required>
                        </div>
                        <div class="col-md-6">
                            <label for="assignPeriod" class="form-label">Período de alquiler <span class="text-danger">*</span></label>
                            <select class="form-select" id="assignPeriod" required>
                                <option value="daily">Por día</option>
                                <option value="weekly">Por semana</option>
                                <option value="monthly">Por mes</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="assignStartDate" class="form-label">Fecha inicio <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="assignStartDate" required>
                        </div>
                        <div class="col-md-6">
                            <label for="assignEndDate" class="form-label">Fecha fin <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="assignEndDate" required>
                        </div>
                        <div class="col-12">
                            <div class="alert alert-info">
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-info-circle-fill me-2"></i>
                                    <div>
                                        <strong>Stock disponible:</strong> <span id="availableStock">25</span> unidades
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <label for="assignNotes" class="form-label">Observaciones</label>
                            <textarea class="form-control" id="assignNotes" rows="2"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveAssignment">
                    <i class="bi bi-check-circle me-1"></i>Confirmar Asignación
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de confirmación para eliminar -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle me-2"></i>Confirmar eliminación
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro que deseas eliminar el ítem <strong id="deleteItemName"></strong>?</p>
                <p class="mb-0">Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">
                    <i class="bi bi-trash me-1"></i>Eliminar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para ver detalles del ítem -->
<div class="modal fade" id="itemDetailsModal" tabindex="-1" aria-labelledby="itemDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="itemDetailsModalLabel">
                    <i class="bi bi-info-circle me-2"></i>Detalles del Ítem
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="card border-0 mb-3">
                    <div class="card-body p-0">
                        <h4 class="mb-3 fw-bold" id="detailItemName">Nombre del Ítem</h4>
                        
                        <div class="mb-4">
                            <div class="d-flex align-items-center mb-2">
                                <div class="icon-container bg-primary bg-opacity-10 me-3">
                                    <i class="bi bi-tag text-primary"></i>
                                </div>
                                <div>
                                    <small class="text-muted d-block">Categoría</small>
                                    <span class="fw-medium" id="detailItemCategory">Mobiliario</span>
                                </div>
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <div class="icon-container bg-success bg-opacity-10 me-3">
                                    <i class="bi bi-box-seam text-success"></i>
                                </div>
                                <div>
                                    <small class="text-muted d-block">Stock Actual</small>
                                    <span class="fw-medium" id="detailItemStock">25 unidades</span>
                                </div>
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <div class="icon-container bg-info bg-opacity-10 me-3">
                                    <i class="bi bi-calendar-check text-info"></i>
                                </div>
                                <div>
                                    <small class="text-muted d-block">Fecha de Registro</small>
                                    <span class="fw-medium" id="detailItemDate">15/02/2025</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-0">
                            <h6 class="fw-bold mb-2">Descripción</h6>
                            <p class="mb-0 text-muted" id="detailItemDescription">Sin descripción disponible.</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<style>
    .icon-container {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
    }
    
    .icon-container i {
        font-size: 1.2rem;
    }
    
    .editable-field {
        cursor: pointer;
        position: relative;
    }
    
    .editable-field:hover .editable-display {
        background-color: rgba(0, 123, 255, 0.05);
        border-radius: 4px;
        padding: 2px 6px;
    }
    
    .editable-field:hover .editable-display::after {
        content: "\F4CA"; /* Código del ícono de lápiz en Bootstrap Icons */
        font-family: "bootstrap-icons";
        margin-left: 5px;
        font-size: 0.8em;
        opacity: 0.5;
    }
    
    .table-responsive {
        min-height: 300px;
    }
    
    .timeline-icon {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .timeline-item {
        position: relative;
        padding-bottom: 1rem;
    }
    
    .timeline-item:not(:last-child)::after {
        content: '';
        position: absolute;
        left: 15px;
        top: 30px;
        height: calc(100% - 15px);
        width: 2px;
        background-color: #e9ecef;
    }
</style>

<script>
 
    function showAlert(message, type = 'info') {
        const alertContainer = document.getElementById('alertContainer');
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
        alertDiv.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        alertContainer.appendChild(alertDiv);
        
 
        setTimeout(() => {
            const alert = bootstrap.Alert.getOrCreateInstance(alertDiv);
            alert.close();
        }, 5000);
    }
    
 
    document.addEventListener('DOMContentLoaded', function() {
 
        document.getElementById('saveNewItem').addEventListener('click', function() {
            const form = document.getElementById('newItemForm');
            
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }
            
 
            const itemData = {
                nombre: document.getElementById('itemName').value,
                categoria: document.getElementById('itemCategory').value,
                stock: parseInt(document.getElementById('itemStock').value),
                descripcion: document.getElementById('itemDescription').value,
                fechaRegistro: new Date().toISOString()
            };
            
 
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
 
            this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Guardando...';
            this.disabled = true;
            
 
            fetch('?handler=SaveItem', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify(itemData)
            })
            .then(response => response.json())
            .then(data => {
 
                this.innerHTML = '<i class="bi bi-save me-1"></i>Guardar Ítem';
                this.disabled = false;
                
                if (data.success) {
 
                    bootstrap.Modal.getInstance(document.getElementById('newItemModal')).hide();
                    
 
                    showAlert('Ítem creado correctamente', 'success');
                    
 
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showAlert('Error al crear el ítem: ' + data.message, 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                this.innerHTML = '<i class="bi bi-save me-1"></i>Guardar Ítem';
                this.disabled = false;
                showAlert('Error al procesar la solicitud', 'danger');
            });
        });
        
 
        document.querySelectorAll('.edit-item-btn').forEach(button => {
            button.addEventListener('click', function() {
                const itemId = this.dataset.id;
                
 
                const originalHTML = this.innerHTML;
                this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';
                this.disabled = true;
                
                try {
 
                    const row = this.closest('tr');
                    if (!row) throw new Error('No se pudo encontrar la fila del ítem');
                    
 
                    const nombre = row.querySelector('[data-nombre]')?.getAttribute('data-nombre') || '';
                    const descripcion = row.querySelector('[data-descripcion]')?.getAttribute('data-descripcion') || '';
                    const stock = parseInt(row.querySelector('[data-stock]')?.getAttribute('data-stock') || '0');
                    const categoria = row.querySelector('[data-categoria]')?.getAttribute('data-categoria') || '';
                    
 
                    this.innerHTML = originalHTML;
                    this.disabled = false;
                    
 
                    document.getElementById('editItemId').value = itemId;
                    document.getElementById('editItemName').value = nombre;
                    document.getElementById('editItemCategory').value = categoria;
                    document.getElementById('editCurrentStock').value = stock;
                    document.getElementById('editItemNotes').value = descripcion;
                    
 
                    const editModal = new bootstrap.Modal(document.getElementById('editItemModal'));
                    editModal.show();
                } catch (error) {
 
                    this.innerHTML = originalHTML;
                    this.disabled = false;
                    console.error('Error:', error);
                    showAlert('Error al cargar los datos del ítem: ' + error.message, 'danger');
                }
            });
        });
        
 
        document.querySelectorAll('.view-details-btn').forEach(button => {
            button.addEventListener('click', function() {
                const itemId = this.dataset.id;
                
 
                const originalHTML = this.innerHTML;
                this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';
                this.disabled = true;
                
                try {
 
                    const row = this.closest('tr');
                    if (!row) throw new Error('No se pudo encontrar la fila del ítem');
                    
 
                    const nombre = row.querySelector('[data-nombre]')?.getAttribute('data-nombre') || '';
                    const descripcion = row.querySelector('[data-descripcion]')?.getAttribute('data-descripcion') || '';
                    const stock = parseInt(row.querySelector('[data-stock]')?.getAttribute('data-stock') || '0');
                    const categoria = row.querySelector('[data-categoria]')?.getAttribute('data-categoria') || '';
                    const fechaRegistro = row.querySelector('[data-fecha]')?.getAttribute('data-fecha') || '';
                    
 
                    this.innerHTML = originalHTML;
                    this.disabled = false;
                    
 
                    document.getElementById('detailItemName').textContent = nombre;
                    document.getElementById('detailItemCategory').textContent = categoria;
                    document.getElementById('detailItemStock').textContent = `${stock} unidades`;
                    
 
                    const fecha = new Date(fechaRegistro);
                    const fechaFormateada = fecha.toLocaleDateString();
                    document.getElementById('detailItemDate').textContent = fechaFormateada;
                    
                    document.getElementById('detailItemDescription').textContent = descripcion || 'Sin descripción disponible.';
                    
 
                    const detailsModal = new bootstrap.Modal(document.getElementById('itemDetailsModal'));
                    detailsModal.show();
                } catch (error) {
 
                    this.innerHTML = originalHTML;
                    this.disabled = false;
                    console.error('Error:', error);
                    showAlert('Error al cargar los detalles del ítem: ' + error.message, 'danger');
                }
            });
        });
        
 
        document.querySelectorAll('.delete-item-btn').forEach(button => {
            button.addEventListener('click', function() {
                const itemId = this.dataset.id;
                const itemName = this.dataset.name;
                
                document.getElementById('deleteItemName').textContent = itemName;
                const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
                deleteModal.show();
                
 
                document.getElementById('confirmDelete').dataset.id = itemId;
            });
        });
        
 
        document.getElementById('saveEditItem').addEventListener('click', function() {
            const form = document.getElementById('editItemForm');
            
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }
            
            const itemId = document.getElementById('editItemId').value;
            
 
            const itemData = {
                id: itemId,
                nombre: document.getElementById('editItemName').value,
                categoria: document.getElementById('editItemCategory').value,
                stock: parseInt(document.getElementById('editCurrentStock').value),
                descripcion: document.getElementById('editItemNotes').value
            };
            
 
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
 
            this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Guardando...';
            this.disabled = true;
            
 
            fetch(`?handler=UpdateItem&id=${itemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify(itemData)
            })
            .then(response => response.json())
            .then(data => {
 
                this.innerHTML = '<i class="bi bi-save me-1"></i>Guardar Cambios';
                this.disabled = false;
                
                if (data.success) {
 
                    bootstrap.Modal.getInstance(document.getElementById('editItemModal')).hide();
                    
 
                    showAlert('Ítem actualizado correctamente', 'success');
                    
 
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showAlert('Error al actualizar el ítem: ' + data.message, 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                this.innerHTML = '<i class="bi bi-save me-1"></i>Guardar Cambios';
                this.disabled = false;
                showAlert('Error al procesar la solicitud', 'danger');
            });
        });
        
 
        document.getElementById('clearFilters').addEventListener('click', function() {
            document.getElementById('filterForm').reset();
            document.getElementById('filterForm').submit();
        });
    });
    
 
    document.getElementById('confirmDelete').addEventListener('click', async function() {
 
        const itemId = this.dataset.id;
        
 
        const originalHTML = this.innerHTML;
        this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Eliminando...';
        this.disabled = true;
        
        try {
 
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
 
            const response = await fetch(`?handler=DeleteItem&id=${itemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                }
            });
            
            const data = await response.json();
            
 
            this.innerHTML = originalHTML;
            this.disabled = false;
            
 
            bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal')).hide();
            
            if (data.success) {
 
                showAlert('Ítem eliminado correctamente', 'success');
                
 
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            } else {
                showAlert(`Error al eliminar el ítem: ${data.message}`, 'danger');
            }
        } catch (error) {
            console.error('Error:', error);
            this.innerHTML = originalHTML;
            this.disabled = false;
            showAlert('Error al procesar la solicitud de eliminación', 'danger');
        }
    });
</script>