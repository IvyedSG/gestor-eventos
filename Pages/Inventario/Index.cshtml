@page
@model gestor_eventos.Pages.Inventario.IndexModel
@{
    ViewData["Title"] = "Gestión de Inventario";
}

<!-- Header con estadísticas -->
<div class="row g-3 mb-4">
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-primary bg-opacity-10">
                        <i class="bi bi-box-seam text-primary"></i>
                    </div>
                    <span class="badge bg-primary bg-opacity-10 text-primary px-2 py-1">Total</span>
                </div>
                <h5 class="fw-bold mb-1">245 ítems</h5>
                <p class="text-muted mb-0 small">en inventario</p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-warning bg-opacity-10">
                        <i class="bi bi-exclamation-triangle text-warning"></i>
                    </div>
                    <span class="badge bg-warning bg-opacity-10 text-warning px-2 py-1">Atención</span>
                </div>
                <h5 class="fw-bold mb-1">12 ítems</h5>
                <p class="text-muted mb-0 small">con stock bajo</p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-danger bg-opacity-10">
                        <i class="bi bi-x-circle text-danger"></i>
                    </div>
                    <span class="badge bg-danger bg-opacity-10 text-danger px-2 py-1">Crítico</span>
                </div>
                <h5 class="fw-bold mb-1">5 ítems</h5>
                <p class="text-muted mb-0 small">sin stock</p>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="icon-container bg-success bg-opacity-10">
                        <i class="bi bi-currency-dollar text-success"></i>
                    </div>
                    <span class="badge bg-success bg-opacity-10 text-success px-2 py-1">Ingresos</span>
                </div>
                <h5 class="fw-bold mb-1">S/ 8,450</h5>
                <p class="text-muted mb-0 small">alquileres activos</p>
            </div>
        </div>
    </div>
</div>

<!-- Filtros y búsqueda -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body p-3">
        <form method="get" id="filterForm">
            <div class="row g-2 align-items-center">
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-light">
                            <i class="bi bi-search"></i>
                        </span>
                        <input type="text" class="form-control border-light bg-light" 
                               placeholder="Buscar" 
                               asp-for="SearchTerm">
                    </div>
                </div>
                
                <div class="col-md-2">
                    <select class="form-select border-light bg-light" asp-for="CategoryFilter">
                        <option value="">Categoría</option>
                        <option value="Mobiliario">Mobiliario</option>
                        <option value="Decoración">Decoración</option>
                        <option value="Audio y Video">Audio y Video</option>
                        <option value="Vajilla">Vajilla y Cristalería</option>
                        <option value="Mantelería">Mantelería</option>
                        <option value="Iluminación">Iluminación</option>
                    </select>
                </div>
                
                <div class="col-md-2">
                    <select class="form-select border-light bg-light" asp-for="StatusFilter">
                        <option value="">Estado de stock</option>
                        <option value="Normal">Normal</option>
                        <option value="Bajo">Bajo</option>
                        <option value="Agotado">Agotado</option>
                    </select>
                </div>
                
                <div class="col-md-1">
                    <button type="button" id="clearFilters" class="btn btn-secondary w-100" title="Limpiar filtros">
                        <i class="bi bi-arrow-counterclockwise"></i>
                    </button>
                </div>
                
                <div class="col-md-2">
                    <button class="btn btn-primary w-100" type="submit" title="Filtrar">
                        <i class="bi bi-funnel-fill me-1"></i> Filtrar
                    </button>
                </div>
                
                <div class="col-md-2 ms-auto">
                    <button class="btn btn-success w-100" type="button" data-bs-toggle="modal" data-bs-target="#newItemModal">
                        <i class="bi bi-plus-circle me-1"></i> Nuevo Ítem
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Alerta de elementos críticos -->
@if (Model.HasLowStockItems)
{
    <div class="alert alert-warning alert-dismissible fade show mb-4" role="alert">
        <div class="d-flex align-items-center">
            <i class="bi bi-exclamation-triangle-fill me-2 fs-4"></i>
            <div>
                <strong>¡Atención!</strong> Hay ítems con stock crítico que requieren reposición.
                <button type="button" class="btn btn-sm btn-warning ms-3" id="viewCriticalItemsBtn">Ver ítems críticos</button>
            </div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Tabla de inventario -->
<div class="card border-0 shadow-sm">
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0" id="inventoryTable">
                <thead class="bg-light text-dark">
                    <tr>
                        <th class="ps-4">Nombre</th>
                        <th class="text-center">Código</th>
                        <th class="text-center">Categoría</th>
                        <th class="text-center">Stock</th>
                        <th class="text-center">Mínimo</th>
                        <th class="text-center">Precio día</th>
                        <th class="text-center">Precio semana</th>
                        <th class="text-center">Precio mes</th>
                        <th class="text-center">Estado</th>
                        <th class="text-end pe-4">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.InventoryItems != null && Model.InventoryItems.Any())
                    {
                        foreach (var item in Model.InventoryItems)
                        {
                            var stockStatus = "";
                            var stockBadgeClass = "";
                            var rowClass = "";
                            
                            if (item.CurrentStock <= 0)
                            {
                                stockStatus = "Agotado";
                                stockBadgeClass = "bg-danger";
                                rowClass = "table-danger bg-opacity-10";
                            }
                            else if (item.CurrentStock < item.MinimumStock)
                            {
                                stockStatus = "Bajo";
                                stockBadgeClass = "bg-warning";
                                rowClass = "table-warning bg-opacity-10";
                            }
                            else
                            {
                                stockStatus = "Normal";
                                stockBadgeClass = "bg-success";
                            }
                            
                            <tr class="@rowClass">
                                <td class="ps-4">
                                    <div class="d-flex align-items-center">
                                        <div class="icon-container bg-light rounded-3 me-3">
                                            @if (item.Category == "Mobiliario")
                                            {
                                                <i class="bi bi-chair text-primary"></i>
                                            }
                                            else if (item.Category == "Decoración")
                                            {
                                                <i class="bi bi-flower1 text-success"></i>
                                            }
                                            else if (item.Category == "Audio y Video")
                                            {
                                                <i class="bi bi-music-note-beamed text-danger"></i>
                                            }
                                            else if (item.Category == "Vajilla")
                                            {
                                                <i class="bi bi-cup text-warning"></i>
                                            }
                                            else if (item.Category == "Mantelería")
                                            {
                                                <i class="bi bi-grid text-info"></i>
                                            }
                                            else if (item.Category == "Iluminación")
                                            {
                                                <i class="bi bi-lightbulb text-secondary"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-box text-muted"></i>
                                            }
                                        </div>
                                        <div>
                                            <span class="fw-medium item-name" 
                                                  data-id="@item.Id" 
                                                  data-item-name="@item.Name">@item.Name</span>
                                            @if (!string.IsNullOrEmpty(item.Notes))
                                            {
                                                <span class="d-block text-muted small">@item.Notes</span>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">@item.Code</td>
                                <td class="text-center">
                                    <span class="badge rounded-pill px-3 py-2 bg-opacity-10 text-dark">
                                        @item.Category
                                    </span>
                                </td>
                                <td class="text-center">
                                    <div class="editable-field" data-type="stock" data-id="@item.Id" data-value="@item.CurrentStock">
                                        <span class="editable-display">@item.CurrentStock</span>
                                        <div class="editable-form" style="display:none;">
                                            <div class="input-group input-group-sm">
                                                <input type="number" class="form-control form-control-sm" value="@item.CurrentStock">
                                                <button class="btn btn-sm btn-primary save-edit" type="button">
                                                    <i class="bi bi-check"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">@item.MinimumStock</td>
                                <td class="text-center">
                                    <div class="editable-field" data-type="dayPrice" data-id="@item.Id" data-value="@item.DailyPrice">
                                        <span class="editable-display">S/ @item.DailyPrice.ToString("0.00")</span>
                                        <div class="editable-form" style="display:none;">
                                            <div class="input-group input-group-sm">
                                                <span class="input-group-text">S/</span>
                                                <input type="number" step="0.01" class="form-control form-control-sm" value="@item.DailyPrice">
                                                <button class="btn btn-sm btn-primary save-edit" type="button">
                                                    <i class="bi bi-check"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <div class="editable-field" data-type="weekPrice" data-id="@item.Id" data-value="@item.WeeklyPrice">
                                        <span class="editable-display">S/ @item.WeeklyPrice.ToString("0.00")</span>
                                        <div class="editable-form" style="display:none;">
                                            <div class="input-group input-group-sm">
                                                <span class="input-group-text">S/</span>
                                                <input type="number" step="0.01" class="form-control form-control-sm" value="@item.WeeklyPrice">
                                                <button class="btn btn-sm btn-primary save-edit" type="button">
                                                    <i class="bi bi-check"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <div class="editable-field" data-type="monthPrice" data-id="@item.Id" data-value="@item.MonthlyPrice">
                                        <span class="editable-display">S/ @item.MonthlyPrice.ToString("0.00")</span>
                                        <div class="editable-form" style="display:none;">
                                            <div class="input-group input-group-sm">
                                                <span class="input-group-text">S/</span>
                                                <input type="number" step="0.01" class="form-control form-control-sm" value="@item.MonthlyPrice">
                                                <button class="btn btn-sm btn-primary save-edit" type="button">
                                                    <i class="bi bi-check"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <span class="badge @stockBadgeClass bg-opacity-20 text-@stockBadgeClass.Replace("bg-", "") px-3 py-2">
                                        @stockStatus
                                    </span>
                                </td>
                                <td class="text-end pe-4">
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-primary assign-item-btn" 
                                                data-bs-toggle="tooltip" 
                                                data-bs-title="Asignar a servicio" 
                                                data-id="@item.Id" 
                                                data-name="@item.Name">
                                            <i class="bi bi-calendar-plus"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-secondary edit-item-btn" 
                                                data-bs-toggle="tooltip" 
                                                data-bs-title="Editar ítem" 
                                                data-id="@item.Id">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger delete-item-btn" 
                                                data-bs-toggle="tooltip" 
                                                data-bs-title="Eliminar ítem" 
                                                data-id="@item.Id"
                                                data-name="@item.Name">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="10" class="text-center py-5">
                                <div class="d-flex flex-column align-items-center py-5">
                                    <i class="bi bi-box-seam text-muted" style="font-size: 3rem;"></i>
                                    <h5 class="mt-3">No se encontraron ítems</h5>
                                    <p class="text-muted mb-4">Prueba ajustando los filtros o agrega un nuevo ítem al inventario</p>
                                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newItemModal">
                                        <i class="bi bi-plus-circle me-2"></i>Nuevo Ítem
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Paginación -->
@if (Model.InventoryItems != null && Model.InventoryItems.Any())
{
    <div class="d-flex justify-content-between align-items-center mt-4">
        <div>
            <span class="text-muted">Mostrando <span class="fw-medium">@Model.InventoryItems.Count</span> de <span class="fw-medium">@Model.TotalItems</span> ítems</span>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination mb-0">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(Model.CurrentPage-1)&searchTerm=@Model.SearchTerm&categoryFilter=@Model.CategoryFilter&statusFilter=@Model.StatusFilter" aria-label="Previous">
                        <span aria-hidden="true">«</span>
                    </a>
                </li>
                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i&searchTerm=@Model.SearchTerm&categoryFilter=@Model.CategoryFilter&statusFilter=@Model.StatusFilter">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(Model.CurrentPage+1)&searchTerm=@Model.SearchTerm&categoryFilter=@Model.CategoryFilter&statusFilter=@Model.StatusFilter" aria-label="Next">
                        <span aria-hidden="true">»</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}

<!-- Modal para Nuevo Ítem -->
<div class="modal fade" id="newItemModal" tabindex="-1" aria-labelledby="newItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="newItemModalLabel">
                    <i class="bi bi-plus-circle me-2"></i>Nuevo Ítem de Inventario
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newItemForm">
                    <div class="row g-3">
                        <div class="col-md-8">
                            <label for="itemName" class="form-label">Nombre del ítem <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="itemName" required>
                        </div>
                        <div class="col-md-4">
                            <label for="itemCode" class="form-label">Código <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="itemCode" required>
                        </div>
                        <div class="col-md-6">
                            <label for="itemCategory" class="form-label">Categoría <span class="text-danger">*</span></label>
                            <select class="form-select" id="itemCategory" required>
                                <option value="">Seleccionar categoría</option>
                                <option value="Mobiliario">Mobiliario</option>
                                <option value="Decoración">Decoración</option>
                                <option value="Audio y Video">Audio y Video</option>
                                <option value="Vajilla">Vajilla y Cristalería</option>
                                <option value="Mantelería">Mantelería</option>
                                <option value="Iluminación">Iluminación</option>
                                <option value="Otro">Otro</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="itemLocation" class="form-label">Ubicación</label>
                            <input type="text" class="form-control" id="itemLocation">
                        </div>
                        <div class="col-md-6">
                            <label for="currentStock" class="form-label">Stock actual <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="currentStock" min="0" required>
                        </div>
                        <div class="col-md-6">
                            <label for="minimumStock" class="form-label">Stock mínimo <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="minimumStock" min="0" required>
                        </div>
                        
                        <div class="col-md-4">
                            <label for="dailyPrice" class="form-label">Precio por día (S/)</label>
                            <input type="number" step="0.01" class="form-control" id="dailyPrice">
                        </div>
                        <div class="col-md-4">
                            <label for="weeklyPrice" class="form-label">Precio por semana (S/)</label>
                            <input type="number" step="0.01" class="form-control" id="weeklyPrice">
                        </div>
                        <div class="col-md-4">
                            <label for="monthlyPrice" class="form-label">Precio por mes (S/)</label>
                            <input type="number" step="0.01" class="form-control" id="monthlyPrice">
                        </div>
                        
                        <div class="col-12">
                            <label for="itemNotes" class="form-label">Notas adicionales</label>
                            <textarea class="form-control" id="itemNotes" rows="3"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveNewItem">
                    <i class="bi bi-save me-1"></i>Guardar Ítem
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Editar Ítem -->
<div class="modal fade" id="editItemModal" tabindex="-1" aria-labelledby="editItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="editItemModalLabel">
                    <i class="bi bi-pencil-square me-2"></i>Editar Ítem
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editItemForm">
                    <input type="hidden" id="editItemId">
                    <div class="row g-3">
                        <div class="col-md-8">
                            <label for="editItemName" class="form-label">Nombre del ítem <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="editItemName" required>
                        </div>
                        <div class="col-md-4">
                            <label for="editItemCode" class="form-label">Código <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="editItemCode" required>
                        </div>
                        <div class="col-md-6">
                            <label for="editItemCategory" class="form-label">Categoría <span class="text-danger">*</span></label>
                            <select class="form-select" id="editItemCategory" required>
                                <option value="">Seleccionar categoría</option>
                                <option value="Mobiliario">Mobiliario</option>
                                <option value="Decoración">Decoración</option>
                                <option value="Audio y Video">Audio y Video</option>
                                <option value="Vajilla">Vajilla y Cristalería</option>
                                <option value="Mantelería">Mantelería</option>
                                <option value="Iluminación">Iluminación</option>
                                <option value="Otro">Otro</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="editItemLocation" class="form-label">Ubicación</label>
                            <input type="text" class="form-control" id="editItemLocation">
                        </div>
                        <div class="col-md-6">
                            <label for="editCurrentStock" class="form-label">Stock actual <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="editCurrentStock" min="0" required>
                        </div>
                        <div class="col-md-6">
                            <label for="editMinimumStock" class="form-label">Stock mínimo <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="editMinimumStock" min="0" required>
                        </div>
                        
                        <div class="col-md-4">
                            <label for="editDailyPrice" class="form-label">Precio por día (S/)</label>
                            <input type="number" step="0.01" class="form-control" id="editDailyPrice">
                        </div>
                        <div class="col-md-4">
                            <label for="editWeeklyPrice" class="form-label">Precio por semana (S/)</label>
                            <input type="number" step="0.01" class="form-control" id="editWeeklyPrice">
                        </div>
                        <div class="col-md-4">
                            <label for="editMonthlyPrice" class="form-label">Precio por mes (S/)</label>
                            <input type="number" step="0.01" class="form-control" id="editMonthlyPrice">
                        </div>
                        
                        <div class="col-12">
                            <label for="editItemNotes" class="form-label">Notas adicionales</label>
                            <textarea class="form-control" id="editItemNotes" rows="3"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveEditItem">
                    <i class="bi bi-save me-1"></i>Guardar Cambios
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para asignar a servicio/reserva -->
<div class="modal fade" id="assignItemModal" tabindex="-1" aria-labelledby="assignItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="assignItemModalLabel">
                    <i class="bi bi-calendar-plus me-2"></i>Asignar <span id="assignItemName"></span> a servicio
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="assignItemForm">
                    <input type="hidden" id="assignItemId">
                    <div class="mb-3">
                        <label for="assignReservation" class="form-label">Reserva/Evento <span class="text-danger">*</span></label>
                        <select class="form-select" id="assignReservation" required>
                            <option value="">Seleccionar reserva</option>
                            <option value="1">Boda de Carlos Rodríguez - 15/05/2025</option>
                            <option value="2">Cumpleaños de María González - 22/04/2025</option>
                            <option value="3">Conferencia Corporativa Empresa ABC - 05/05/2025</option>
                            <option value="4">Graduación de Juan Pérez - 15/05/2025</option>
                            <option value="5">Bautizo de Ana López - 30/04/2025</option>
                        </select>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="assignQuantity" class="form-label">Cantidad <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="assignQuantity" min="1" required>
                        </div>
                        <div class="col-md-6">
                            <label for="assignPeriod" class="form-label">Período de alquiler <span class="text-danger">*</span></label>
                            <select class="form-select" id="assignPeriod" required>
                                <option value="daily">Por día</option>
                                <option value="weekly">Por semana</option>
                                <option value="monthly">Por mes</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="assignStartDate" class="form-label">Fecha inicio <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="assignStartDate" required>
                        </div>
                        <div class="col-md-6">
                            <label for="assignEndDate" class="form-label">Fecha fin <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="assignEndDate" required>
                        </div>
                        <div class="col-12">
                            <div class="alert alert-info">
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-info-circle-fill me-2"></i>
                                    <div>
                                        <strong>Stock disponible:</strong> <span id="availableStock">25</span> unidades
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <label for="assignNotes" class="form-label">Observaciones</label>
                            <textarea class="form-control" id="assignNotes" rows="2"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveAssignment">
                    <i class="bi bi-check-circle me-1"></i>Confirmar Asignación
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de confirmación para eliminar -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle me-2"></i>Confirmar eliminación
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro que deseas eliminar el ítem <strong id="deleteItemName"></strong>?</p>
                <p class="mb-0">Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">
                    <i class="bi bi-trash me-1"></i>Eliminar
                </button>
            </div>
        </div>
    </div>
</div>


    <style>
        .icon-container {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
        }
        
        .icon-container i {
            font-size: 1.2rem;
        }
        
        .editable-field {
            cursor: pointer;
            position: relative;
        }
        
        .editable-field:hover .editable-display {
            background-color: rgba(0, 123, 255, 0.05);
            border-radius: 4px;
            padding: 2px 6px;
        }
        
        .editable-field:hover .editable-display::after {
            content: "\F4CA"; /* Código del ícono de lápiz en Bootstrap Icons */
            font-family: "bootstrap-icons";
            margin-left: 5px;
            font-size: 0.8em;
            opacity: 0.5;
        }
        
        .table-responsive {
            min-height: 300px;
        }
        
        .timeline-icon {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .timeline-item {
            position: relative;
            padding-bottom: 1rem;
        }
        
        .timeline-item:not(:last-child)::after {
            content: '';
            position: absolute;
            left: 15px;
            top: 30px;
            height: calc(100% - 15px);
            width: 2px;
            background-color: #e9ecef;
        }
    </style>



    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Inicializar tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            // Campos editables en la tabla
            document.querySelectorAll('.editable-field').forEach(field => {
                field.addEventListener('click', function() {
                    // Oculta el display y muestra el formulario
                    this.querySelector('.editable-display').style.display = 'none';
                    this.querySelector('.editable-form').style.display = 'block';
                    
                    // Enfoca el input
                    const input = this.querySelector('input');
                    input.focus();
                    input.select();
                });
                
                // Botón para guardar la edición inline
                field.querySelector('.save-edit').addEventListener('click', function() {
                    const field = this.closest('.editable-field');
                    const input = field.querySelector('input');
                    const display = field.querySelector('.editable-display');
                    const itemId = field.dataset.id;
                    const fieldType = field.dataset.type;
                    const newValue = input.value;
                    
                    // Aquí implementarías la lógica para guardar los cambios
                    // mediante una llamada AJAX
                    console.log(`Guardando ${fieldType} para ítem ${itemId}: ${newValue}`);
                    
                    // Actualizar el valor mostrado
                    if (fieldType === 'stock') {
                        display.textContent = newValue;
                    } else {
                        display.textContent = `S/ ${parseFloat(newValue).toFixed(2)}`;
                    }
                    
                    // Restablecer la visualización
                    display.style.display = 'inline';
                    field.querySelector('.editable-form').style.display = 'none';
                });
                
                // Capturar el evento Enter en inputs
                field.querySelector('input').addEventListener('keydown', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        field.querySelector('.save-edit').click();
                    }
                });
                
                // Cuando se pierde el foco, cancelar edición
                field.querySelector('input').addEventListener('blur', function(e) {
                    // Solo si no se hizo clic en el botón guardar
                    if (!e.relatedTarget || !e.relatedTarget.classList.contains('save-edit')) {
                        const display = field.querySelector('.editable-display');
                        display.style.display = 'inline';
                        field.querySelector('.editable-form').style.display = 'none';
                    }
                });
            });
            
            // Manejar botón eliminar ítem
            document.querySelectorAll('.delete-item-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const itemId = this.dataset.id;
                    const itemName = this.dataset.name;
                    
                    document.getElementById('deleteItemName').textContent = itemName;
                    
                    // Configurar el botón de confirmación
                    document.getElementById('confirmDelete').dataset.id = itemId;
                    
                    // Mostrar modal de confirmación
                    const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
                    deleteModal.show();
                });
            });
            
            // Confirmar eliminación
            document.getElementById('confirmDelete').addEventListener('click', function() {
                const itemId = this.dataset.id;
                
                // Aquí implementarías la lógica para eliminar el ítem
                // mediante una llamada AJAX
                console.log(`Eliminando ítem ${itemId}`);
                
                // Cerrar modal y recargar la página o actualizar la tabla
                bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal')).hide();
                
                // Mostrar notificación de éxito
                alert('Ítem eliminado correctamente');
                
                // En un entorno real, deberías recargar los datos o eliminar la fila de la tabla
            });
            
            // Asignar ítem a servicio
            document.querySelectorAll('.assign-item-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const itemId = this.dataset.id;
                    const itemName = this.dataset.name;
                    
                    document.getElementById('assignItemName').textContent = itemName;
                    document.getElementById('assignItemId').value = itemId;
                    
                    // Mostrar modal de asignación
                    const assignModal = new bootstrap.Modal(document.getElementById('assignItemModal'));
                    assignModal.show();
                });
            });
            
            // Guardar asignación
            document.getElementById('saveAssignment').addEventListener('click', function() {
                const itemId = document.getElementById('assignItemId').value;
                const reservationId = document.getElementById('assignReservation').value;
                const quantity = document.getElementById('assignQuantity').value;
                const period = document.getElementById('assignPeriod').value;
                const startDate = document.getElementById('assignStartDate').value;
                const endDate = document.getElementById('assignEndDate').value;
                
                // Validar formulario
                if (!reservationId || !quantity || !startDate || !endDate) {
                    alert('Por favor complete todos los campos obligatorios');
                    return;
                }
                
                // Aquí implementarías la lógica para guardar la asignación
                // mediante una llamada AJAX
                console.log(`Asignando ítem ${itemId} a reserva ${reservationId}: ${quantity} unidades`);
                
                // Cerrar modal
                bootstrap.Modal.getInstance(document.getElementById('assignItemModal')).hide();
                
                // Mostrar notificación de éxito
                alert('Ítem asignado correctamente');
            });
            
            // Editar ítem completo
            document.querySelectorAll('.edit-item-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const itemId = this.dataset.id;
                    
                    // Aquí deberías cargar los datos del ítem
                    // En una aplicación real, harías una petición AJAX para obtener los datos
                    
                    // Simulamos datos de ejemplo
                    document.getElementById('editItemId').value = itemId;
                    document.getElementById('editItemName').value = 'Mesa redonda';
                    document.getElementById('editItemCode').value = 'MR-001';
                    document.getElementById('editItemCategory').value = 'Mobiliario';
                    document.getElementById('editItemLocation').value = 'Almacén principal';
                    document.getElementById('editCurrentStock').value = '25';
                    document.getElementById('editMinimumStock').value = '10';
                    document.getElementById('editDailyPrice').value = '50.00';
                    document.getElementById('editWeeklyPrice').value = '300.00';
                    document.getElementById('editMonthlyPrice').value = '1200.00';
                    document.getElementById('editItemNotes').value = 'Mesas de 1.5m de diámetro para 8-10 personas';
                    
                    // Mostrar modal de edición
                    const editModal = new bootstrap.Modal(document.getElementById('editItemModal'));
                    editModal.show();
                });
            });
            
            // Guardar edición de ítem
            document.getElementById('saveEditItem').addEventListener('click', function() {
                // Validar formulario
                const form = document.getElementById('editItemForm');
                if (!form.checkValidity()) {
                    form.reportValidity();
                    return;
                }
                
                // Aquí implementarías la lógica para guardar los cambios
                // mediante una llamada AJAX
                console.log('Guardando cambios del ítem');
                
                // Cerrar modal
                bootstrap.Modal.getInstance(document.getElementById('editItemModal')).hide();
                
                // Mostrar notificación de éxito
                alert('Ítem actualizado correctamente');
            });
            
            // Guardar nuevo ítem
            document.getElementById('saveNewItem').addEventListener('click', function() {
                // Validar formulario
                const form = document.getElementById('newItemForm');
                if (!form.checkValidity()) {
                    form.reportValidity();
                    return;
                }
                
                // Aquí implementarías la lógica para guardar el nuevo ítem
                // mediante una llamada AJAX
                console.log('Guardando nuevo ítem');
                
                // Cerrar modal
                bootstrap.Modal.getInstance(document.getElementById('newItemModal')).hide();
                
                // Mostrar notificación de éxito
                alert('Ítem creado correctamente');
            });
            
            // Ver ítems críticos
            document.getElementById('viewCriticalItemsBtn')?.addEventListener('click', function() {
                // Aplicar filtro de "Stock bajo" y "Agotado"
                document.querySelector('[name="StatusFilter"]').value = 'Bajo';
                document.getElementById('filterForm').submit();
            });
            
            // Limpiar filtros
            document.getElementById('clearFilters').addEventListener('click', function() {
                document.querySelector('[name="SearchTerm"]').value = '';
                document.querySelector('[name="CategoryFilter"]').value = '';
                document.querySelector('[name="StatusFilter"]').value = '';
                document.getElementById('filterForm').submit();
            });
        });
    </script>
